% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TaxonClient.r
\docType{data}
\name{TaxonClient}
\alias{TaxonClient}
\title{Taxon operations}
\format{}
\usage{
# client <- TaxonClient$new()
}
\description{
Client class for nbaR.Taxon objects
}
\section{Fields}{

\describe{
\item{\code{basePath}}{Stores url path of the request.}

\item{\code{userAgent}}{Set the user agent of the request.}
}}

\section{Methods}{

\describe{
\item{\code{ count }}{

  Get the number of taxa matching a given condition;
  Conditions given as query parameters or a querySpec JSON.

    Parameters:
    \itemize{
        \item \code{ query_spec } : Object of type QuerySpec or its JSON representation

        \item \code{ queryParams } : named list or vector with query parameters

        \item \code{ ... } : additional parameters passed to httr::GET
    }
    Returns:
        \code{ integer }
}
\item{\code{ count_distinct_values }}{

  Count the distinct number of values that exist for a given field;
  See also endpoint /getDistinctValues.

    Parameters:
    \itemize{

        \item \code{ field } : name of field in the taxon object


        \item \code{ ... } : additional parameters passed to httr::GET
    }
    Returns:
        \code{ list }
}
\item{\code{ count_distinct_values_per_group }}{

  Count the distinct number of field values that exist per the given field to group by;
  See also endpoint /getDistinctValuesPerGroup.

    Parameters:
    \itemize{

        \item \code{ group } : name of field in the taxon object you want to group by \item \code{ field } : name of field in the taxon object


        \item \code{ ... } : additional parameters passed to httr::GET
    }
    Returns:
        \code{ list }
}
\item{\code{ download_query }}{

  Dynamic download service: Query for taxa and return result as a stream ...;
  Query with query parameters or querySpec JSON. ....

    Parameters:
    \itemize{
        \item \code{ query_spec } : Object of type QuerySpec or its JSON representation

        \item \code{ queryParams } : named list or vector with query parameters

        \item \code{ ... } : additional parameters passed to httr::GET
    }
    Returns:
        \code{ Taxon }
}
\item{\code{ dwca_get_data_set }}{

  Download dataset as Darwin Core Archive File;
  Available datasets can be queried with /taxon/dwca/getDataSetNames. Response saved to &lt;datasetname&gt;-&lt;yyyymmdd&gt;.dwca.zip.

    Parameters:
    \itemize{

        \item \code{ dataset } : name of dataset

        \item \code{ filename } : location to save data, defaults to \code{format(Sys.time(), "download-\%Y-\%m-\%dT\%H:\%m.zip")}
        \item \code{ ... } : additional parameters passed to httr::GET
    }
    Returns:
        \code{  }
}
\item{\code{ dwca_get_data_set_names }}{

  Retrieve the names of all available datasets;
  Individual datasets can then be downloaded with /dwca/getDataSet/{dataset}.

    Parameters:
    \itemize{




        \item \code{ ... } : additional parameters passed to httr::GET
    }
    Returns:
        \code{ character }
}
\item{\code{ dwca_query }}{

  Dynamic download service: Query for taxa and return result as Darwin Core Archive File;
  Query with query parameters or querySpec JSON. Response saved to nba-taxa.dwca.zip.

    Parameters:
    \itemize{
        \item \code{ query_spec } : Object of type QuerySpec or its JSON representation

        \item \code{ queryParams } : named list or vector with query parameters
        \item \code{ filename } : location to save data, defaults to \code{format(Sys.time(), "download-\%Y-\%m-\%dT\%H:\%m.zip")}
        \item \code{ ... } : additional parameters passed to httr::GET
    }
    Returns:
        \code{  }
}
\item{\code{ find }}{

  Find a taxon by id;
  If found, returns a single taxon.

    Parameters:
    \itemize{

        \item \code{ id } : id of taxon


        \item \code{ ... } : additional parameters passed to httr::GET
    }
    Returns:
        \code{ Taxon }
}
\item{\code{ find_by_ids }}{

  Find taxa by ids;
  Given multiple ids, returns a list of taxa.

    Parameters:
    \itemize{

        \item \code{ ids } : ids of multiple taxa, separated by comma


        \item \code{ ... } : additional parameters passed to httr::GET
    }
    Returns:
        \code{ Taxon }
}
\item{\code{ get_distinct_values }}{

  Get all different values that can be found for one field;
  A list of all fields for taxon documents can be retrieved with /metadata/getFieldInfo.

    Parameters:
    \itemize{

        \item \code{ field } : name of field in a taxon object


        \item \code{ ... } : additional parameters passed to httr::GET
    }
    Returns:
        \code{ list }
}
\item{\code{ get_distinct_values_per_group }}{

  Get all distinct values (and their document count) for the field given divided per distinct value of the field to group by;
  See also endpoint /getDistinctValues.

    Parameters:
    \itemize{

        \item \code{ group } : name of field in the taxon object you want to group by \item \code{ field } : name of field in the taxon object


        \item \code{ ... } : additional parameters passed to httr::GET
    }
    Returns:
        \code{ list }
}
\item{\code{ get_field_info }}{

  Returns extended information for each field of a specimen document;
  Info consists of whether the fields is indexed, the ElasticSearch datatype and a list of allowed operators.

    Parameters:
    \itemize{




        \item \code{ ... } : additional parameters passed to httr::GET
    }
    Returns:
        \code{ list }
}
\item{\code{ get_paths }}{

  Returns the full path of all fields within a document;
  See also metadata/getFieldInfo for all allowed operators per field.

    Parameters:
    \itemize{




        \item \code{ ... } : additional parameters passed to httr::GET
    }
    Returns:
        \code{ character }
}
\item{\code{ get_setting }}{

  Get the value of an NBA setting;
  All settings can be queried with /metadata/getSettings.

    Parameters:
    \itemize{

        \item \code{ name } : name of setting


        \item \code{ ... } : additional parameters passed to httr::GET
    }
    Returns:
        \code{ list }
}
\item{\code{ get_settings }}{

  List all publicly available configuration settings for the NBA;
  The value of a specific setting can be queried with metadata/getSetting/{name}.

    Parameters:
    \itemize{




        \item \code{ ... } : additional parameters passed to httr::GET
    }
    Returns:
        \code{ list }
}
\item{\code{ group_by_scientific_name }}{

  Aggregates Taxon and Specimen documents according to their scientific names;
  Returns a list with ScientificNameGroups, which contain Taxon and Specimen documents that share a scientific name.

    Parameters:
    \itemize{
        \item \code{ query_spec } : Object of type QuerySpec or its JSON representation

        \item \code{ queryParams } : named list or vector with query parameters

        \item \code{ ... } : additional parameters passed to httr::GET
    }
    Returns:
        \code{ QueryResult }
}
\item{\code{ is_operator_allowed }}{

  Checks if a given operator is allowed for a given field;
  See also metadata/getFieldInfo.

    Parameters:
    \itemize{

        \item \code{ field } : specimen document field \item \code{ operator } : operator


        \item \code{ ... } : additional parameters passed to httr::GET
    }
    Returns:
        \code{ list }
}
\item{\code{ query }}{

  Query for taxa;
  Search for taxa (GET) using query parameters or a querySpec JSON.

    Parameters:
    \itemize{
        \item \code{ query_spec } : Object of type QuerySpec or its JSON representation

        \item \code{ queryParams } : named list or vector with query parameters

        \item \code{ ... } : additional parameters passed to httr::GET
    }
    Returns:
        \code{ QueryResult }
}
}
}

\keyword{datasets}
