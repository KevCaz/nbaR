% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SpecimenClient.r
\docType{class}
\name{SpecimenClient}
\alias{SpecimenClient}
\title{Specimen operations}
\format{
R6 class
}
\usage{
# client <- SpecimenClient$new()
}
\description{
This client connects to all Specimen-related endpoints
of the NBA. Each endpoint is available as a class method
(see section 'Methods' below). Optionally, a custom URL
pointing to a NBA server and a user Agent can be specified
by the user (see section 'Fields' below).
}
\section{Methods}{

\describe{
\item{\code{ count }}{

Get the number of specimens matching a given condition;
Conditions given as query parameters or a querySpec JSON.

\if{html}{\out{<div class="sourceCode">}}\preformatted{Parameters:
\\itemize\{
    \\item \code{ query_spec } : Object of type QuerySpec or its JSON representation

    \\item \code{ queryParams } : named list or vector with query parameters

    \\item \code{ ... } : additional parameters passed to httr::GET
\}
Returns:
    \code{ integer }
}\if{html}{\out{</div>}}

}
\item{\code{ count_distinct_values }}{

Count the distinct number of values that exist for a given field;
See also endpoint /getDistinctValues.

\if{html}{\out{<div class="sourceCode">}}\preformatted{Parameters:
\\itemize\{
    \\item \code{ query_spec } : Object of type QuerySpec or its JSON representation
    \\item \code{ field } : Name of field in the specimen object
    \\item \code{ queryParams } : named list or vector with query parameters

    \\item \code{ ... } : additional parameters passed to httr::GET
\}
Returns:
    \code{ integer }
}\if{html}{\out{</div>}}

}
\item{\code{ count_distinct_values_per_group }}{

Count the distinct number of field values that exist per the given field to group by;
See also endpoint /getDistinctValuesPerGroup.

\if{html}{\out{<div class="sourceCode">}}\preformatted{Parameters:
\\itemize\{

    \\item \code{ group } : Name of field in the specimen object you want to group by \\item \code{ field } : Name of field in the specimen object


    \\item \code{ ... } : additional parameters passed to httr::GET
\}
Returns:
    \code{ list }
}\if{html}{\out{</div>}}

}
\item{\code{ download_query }}{

Dynamic download service: Query for specimens and return result as a stream ...;
Query with query parameters or querySpec JSON. ....

\if{html}{\out{<div class="sourceCode">}}\preformatted{Parameters:
\\itemize\{
    \\item \code{ query_spec } : Object of type QuerySpec or its JSON representation

    \\item \code{ queryParams } : named list or vector with query parameters

    \\item \code{ ... } : additional parameters passed to httr::GET
\}
Returns:
    \code{ Specimen }
}\if{html}{\out{</div>}}

}
\item{\code{ dwca_get_data_set }}{

Download dataset as Darwin Core Archive File;
Available datasets can be queried with /specimen/dwca/getDataSetNames. Response saved to <datasetname>-<yyyymmdd>.dwca.zip.

\if{html}{\out{<div class="sourceCode">}}\preformatted{Parameters:
\\itemize\{

    \\item \code{ dataset } : name of dataset

    \\item \code{ filename } : location to save data, defaults to \code{format(Sys.time(), "download-\%Y-\%m-\%dT\%H:\%m.zip")}
    \\item \code{ ... } : additional parameters passed to httr::GET
\}
Returns:
    \code{  }
}\if{html}{\out{</div>}}

}
\item{\code{ dwca_get_data_set_names }}{

Retrieve the names of all available datasets;
Individual datasets can then be downloaded with /dwca/getDataSet/{dataset}.

\if{html}{\out{<div class="sourceCode">}}\preformatted{Parameters:
\\itemize\{




    \\item \code{ ... } : additional parameters passed to httr::GET
\}
Returns:
    \code{ character }
}\if{html}{\out{</div>}}

}
\item{\code{ dwca_query }}{

Dynamic download service: Query for specimens and return result as Darwin Core Archive File;
Query with query parameters or querySpec JSON. Response saved to nba-specimens.dwca.zip.

\if{html}{\out{<div class="sourceCode">}}\preformatted{Parameters:
\\itemize\{
    \\item \code{ query_spec } : Object of type QuerySpec or its JSON representation

    \\item \code{ queryParams } : named list or vector with query parameters
    \\item \code{ filename } : location to save data, defaults to \code{format(Sys.time(), "download-\%Y-\%m-\%dT\%H:\%m.zip")}
    \\item \code{ ... } : additional parameters passed to httr::GET
\}
Returns:
    \code{  }
}\if{html}{\out{</div>}}

}
\item{\code{ exists }}{

Returns whether or not a unitID for a specimen exists;
Returns either true or false.

\if{html}{\out{<div class="sourceCode">}}\preformatted{Parameters:
\\itemize\{

    \\item \code{ unit_id } : the unitID of the specimen to query


    \\item \code{ ... } : additional parameters passed to httr::GET
\}
Returns:
    \code{ logical }
}\if{html}{\out{</div>}}

}
\item{\code{ find }}{

Find a specimen by id;
If found, returns a single specimen.

\if{html}{\out{<div class="sourceCode">}}\preformatted{Parameters:
\\itemize\{

    \\item \code{ id } : id of specimen


    \\item \code{ ... } : additional parameters passed to httr::GET
\}
Returns:
    \code{ Specimen }
}\if{html}{\out{</div>}}

}
\item{\code{ find_by_ids }}{

Find specimens by ids;
Given multiple ids, returns a list of specimen.

\if{html}{\out{<div class="sourceCode">}}\preformatted{Parameters:
\\itemize\{

    \\item \code{ ids } : ids of multiple specimen, separated by comma


    \\item \code{ ... } : additional parameters passed to httr::GET
\}
Returns:
    \code{ Specimen }
}\if{html}{\out{</div>}}

}
\item{\code{ find_by_unit_id }}{

Find a specimen by unitID;
Get a specimen by its unitID. Returns a list of specimens since unitIDs are not strictly unique.

\if{html}{\out{<div class="sourceCode">}}\preformatted{Parameters:
\\itemize\{

    \\item \code{ unit_id } : the unitID of the specimen to query


    \\item \code{ ... } : additional parameters passed to httr::GET
\}
Returns:
    \code{ Specimen }
}\if{html}{\out{</div>}}

}
\item{\code{ get_distinct_values }}{

Get all different values that exist for a field;
A list of all fields for specimen documents can be retrieved with /metadata/getFieldInfo.

\if{html}{\out{<div class="sourceCode">}}\preformatted{Parameters:
\\itemize\{
    \\item \code{ query_spec } : Object of type QuerySpec or its JSON representation
    \\item \code{ field } : Name of field in specimen object
    \\item \code{ queryParams } : named list or vector with query parameters

    \\item \code{ ... } : additional parameters passed to httr::GET
\}
Returns:
    \code{ list }
}\if{html}{\out{</div>}}

}
\item{\code{ get_distinct_values_per_group }}{

Get all distinct values (and their document count) for the field given divided per distinct value of the field to group by;
See also endpoint /getDistinctValues.

\if{html}{\out{<div class="sourceCode">}}\preformatted{Parameters:
\\itemize\{

    \\item \code{ group } : Name of field in the specimen object you want to group by \\item \code{ field } : Name of field in the specimen object


    \\item \code{ ... } : additional parameters passed to httr::GET
\}
Returns:
    \code{ list }
}\if{html}{\out{</div>}}

}
\item{\code{ get_field_info }}{

Returns extended information for each field of a specimen document;
Info consists of whether the fields is indexed, the ElasticSearch datatype and a list of allowed operators.

\if{html}{\out{<div class="sourceCode">}}\preformatted{Parameters:
\\itemize\{




    \\item \code{ ... } : additional parameters passed to httr::GET
\}
Returns:
    \code{ list }
}\if{html}{\out{</div>}}

}
\item{\code{ get_ids_in_collection }}{

Retrieve all ids within a 'special collection' of specimens;
Available collections can be queried with /getNamedCollections.

\if{html}{\out{<div class="sourceCode">}}\preformatted{Parameters:
\\itemize\{

    \\item \code{ name } : name of dataset


    \\item \code{ ... } : additional parameters passed to httr::GET
\}
Returns:
    \code{ character }
}\if{html}{\out{</div>}}

}
\item{\code{ get_named_collections }}{

Retrieve the names of all 'special collections' of specimens;
See also here: http://bioportal.naturalis.nl/collecties.

\if{html}{\out{<div class="sourceCode">}}\preformatted{Parameters:
\\itemize\{




    \\item \code{ ... } : additional parameters passed to httr::GET
\}
Returns:
    \code{ character }
}\if{html}{\out{</div>}}

}
\item{\code{ get_paths }}{

Returns the full path of all fields within a document;
See also metadata/getFieldInfo for all allowed operators per field.

\if{html}{\out{<div class="sourceCode">}}\preformatted{Parameters:
\\itemize\{




    \\item \code{ ... } : additional parameters passed to httr::GET
\}
Returns:
    \code{ character }
}\if{html}{\out{</div>}}

}
\item{\code{ get_setting }}{

Get the value of an NBA setting;
All settings can be queried with /metadata/getSettings.

\if{html}{\out{<div class="sourceCode">}}\preformatted{Parameters:
\\itemize\{

    \\item \code{ name } : name of setting


    \\item \code{ ... } : additional parameters passed to httr::GET
\}
Returns:
    \code{ list }
}\if{html}{\out{</div>}}

}
\item{\code{ get_settings }}{

List all publicly available configuration settings for the NBA;
The value of a specific setting can be queried with metadata/getSetting/{name}.

\if{html}{\out{<div class="sourceCode">}}\preformatted{Parameters:
\\itemize\{




    \\item \code{ ... } : additional parameters passed to httr::GET
\}
Returns:
    \code{ list }
}\if{html}{\out{</div>}}

}
\item{\code{ group_by_scientific_name }}{

Aggregates Taxon and Specimen documents according to their scientific names;
Returns a list with ScientificNameGroups, which contain Taxon and Specimen documents that share a scientific name.

\if{html}{\out{<div class="sourceCode">}}\preformatted{Parameters:
\\itemize\{
    \\item \code{ query_spec } : Object of type QuerySpec or its JSON representation

    \\item \code{ queryParams } : named list or vector with query parameters

    \\item \code{ ... } : additional parameters passed to httr::GET
\}
Returns:
    \code{ QueryResult }
}\if{html}{\out{</div>}}

}
\item{\code{ is_operator_allowed }}{

Checks if a given operator is allowed for a given field;
See also metadata/getFieldInfo.

\if{html}{\out{<div class="sourceCode">}}\preformatted{Parameters:
\\itemize\{

    \\item \code{ field } : specimen document field \\item \code{ operator } : operator


    \\item \code{ ... } : additional parameters passed to httr::GET
\}
Returns:
    \code{ logical }
}\if{html}{\out{</div>}}

}
\item{\code{ query }}{

Query for specimens;
Search for specimens (GET) using query parameters or a querySpec JSON.

\if{html}{\out{<div class="sourceCode">}}\preformatted{Parameters:
\\itemize\{
    \\item \code{ query_spec } : Object of type QuerySpec or its JSON representation

    \\item \code{ queryParams } : named list or vector with query parameters

    \\item \code{ ... } : additional parameters passed to httr::GET
\}
Returns:
    \code{ QueryResult }
}\if{html}{\out{</div>}}

}
}
}

\section{Super class}{
\code{\link[nbaR:ApiClient]{nbaR::ApiClient}} -> \code{SpecimenClient}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{basePath}}{Stores url path of the request, defaults to http://api.biodiversitydata.nl/v2}

\item{\code{userAgent}}{Set the user agent of the request, defaults to nbaR/0.1.0}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{basePath}}{Stores url path of the request, defaults to http://api.biodiversitydata.nl/v2}

\item{\code{userAgent}}{Set the user agent of the request, defaults to nbaR/0.1.0}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SpecimenClient-new}{\code{SpecimenClient$new()}}
\item \href{#method-SpecimenClient-count}{\code{SpecimenClient$count()}}
\item \href{#method-SpecimenClient-count_distinct_values}{\code{SpecimenClient$count_distinct_values()}}
\item \href{#method-SpecimenClient-count_distinct_values_per_group}{\code{SpecimenClient$count_distinct_values_per_group()}}
\item \href{#method-SpecimenClient-download_query}{\code{SpecimenClient$download_query()}}
\item \href{#method-SpecimenClient-dwca_get_data_set}{\code{SpecimenClient$dwca_get_data_set()}}
\item \href{#method-SpecimenClient-dwca_get_data_set_names}{\code{SpecimenClient$dwca_get_data_set_names()}}
\item \href{#method-SpecimenClient-dwca_query}{\code{SpecimenClient$dwca_query()}}
\item \href{#method-SpecimenClient-exists}{\code{SpecimenClient$exists()}}
\item \href{#method-SpecimenClient-find}{\code{SpecimenClient$find()}}
\item \href{#method-SpecimenClient-find_by_ids}{\code{SpecimenClient$find_by_ids()}}
\item \href{#method-SpecimenClient-find_by_unit_id}{\code{SpecimenClient$find_by_unit_id()}}
\item \href{#method-SpecimenClient-get_distinct_values}{\code{SpecimenClient$get_distinct_values()}}
\item \href{#method-SpecimenClient-get_distinct_values_per_group}{\code{SpecimenClient$get_distinct_values_per_group()}}
\item \href{#method-SpecimenClient-get_field_info}{\code{SpecimenClient$get_field_info()}}
\item \href{#method-SpecimenClient-get_ids_in_collection}{\code{SpecimenClient$get_ids_in_collection()}}
\item \href{#method-SpecimenClient-get_named_collections}{\code{SpecimenClient$get_named_collections()}}
\item \href{#method-SpecimenClient-get_paths}{\code{SpecimenClient$get_paths()}}
\item \href{#method-SpecimenClient-get_setting}{\code{SpecimenClient$get_setting()}}
\item \href{#method-SpecimenClient-get_settings}{\code{SpecimenClient$get_settings()}}
\item \href{#method-SpecimenClient-group_by_scientific_name}{\code{SpecimenClient$group_by_scientific_name()}}
\item \href{#method-SpecimenClient-is_operator_allowed}{\code{SpecimenClient$is_operator_allowed()}}
\item \href{#method-SpecimenClient-query}{\code{SpecimenClient$query()}}
\item \href{#method-SpecimenClient-print}{\code{SpecimenClient$print()}}
\item \href{#method-SpecimenClient-clone}{\code{SpecimenClient$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="nbaR" data-topic="ApiClient" data-id="callApi"><a href='../../nbaR/html/ApiClient.html#method-ApiClient-callApi'><code>nbaR::ApiClient$callApi()</code></a></span></li>
<li><span class="pkg-link" data-pkg="nbaR" data-topic="ApiClient" data-id="handleError"><a href='../../nbaR/html/ApiClient.html#method-ApiClient-handleError'><code>nbaR::ApiClient$handleError()</code></a></span></li>
<li><span class="pkg-link" data-pkg="nbaR" data-topic="ApiClient" data-id="ping"><a href='../../nbaR/html/ApiClient.html#method-ApiClient-ping'><code>nbaR::ApiClient$ping()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpecimenClient-new"></a>}}
\if{latex}{\out{\hypertarget{method-SpecimenClient-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpecimenClient$new(basePath, userAgent)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpecimenClient-count"></a>}}
\if{latex}{\out{\hypertarget{method-SpecimenClient-count}{}}}
\subsection{Method \code{count()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpecimenClient$count(querySpec = NULL, queryParams = list(), ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpecimenClient-count_distinct_values"></a>}}
\if{latex}{\out{\hypertarget{method-SpecimenClient-count_distinct_values}{}}}
\subsection{Method \code{count_distinct_values()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpecimenClient$count_distinct_values(
  field = NULL,
  querySpec = NULL,
  queryParams = list(),
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpecimenClient-count_distinct_values_per_group"></a>}}
\if{latex}{\out{\hypertarget{method-SpecimenClient-count_distinct_values_per_group}{}}}
\subsection{Method \code{count_distinct_values_per_group()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpecimenClient$count_distinct_values_per_group(group = NULL, field = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpecimenClient-download_query"></a>}}
\if{latex}{\out{\hypertarget{method-SpecimenClient-download_query}{}}}
\subsection{Method \code{download_query()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpecimenClient$download_query(querySpec = NULL, queryParams = list(), ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpecimenClient-dwca_get_data_set"></a>}}
\if{latex}{\out{\hypertarget{method-SpecimenClient-dwca_get_data_set}{}}}
\subsection{Method \code{dwca_get_data_set()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpecimenClient$dwca_get_data_set(
  dataset = NULL,
  filename = format(Sys.time(), "download-\%Y-\%m-\%dT\%H:\%m.zip"),
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpecimenClient-dwca_get_data_set_names"></a>}}
\if{latex}{\out{\hypertarget{method-SpecimenClient-dwca_get_data_set_names}{}}}
\subsection{Method \code{dwca_get_data_set_names()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpecimenClient$dwca_get_data_set_names(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpecimenClient-dwca_query"></a>}}
\if{latex}{\out{\hypertarget{method-SpecimenClient-dwca_query}{}}}
\subsection{Method \code{dwca_query()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpecimenClient$dwca_query(
  querySpec = NULL,
  queryParams = list(),
  filename = format(Sys.time(), "download-\%Y-\%m-\%dT\%H:\%m.zip"),
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpecimenClient-exists"></a>}}
\if{latex}{\out{\hypertarget{method-SpecimenClient-exists}{}}}
\subsection{Method \code{exists()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpecimenClient$exists(unitID = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpecimenClient-find"></a>}}
\if{latex}{\out{\hypertarget{method-SpecimenClient-find}{}}}
\subsection{Method \code{find()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpecimenClient$find(id = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpecimenClient-find_by_ids"></a>}}
\if{latex}{\out{\hypertarget{method-SpecimenClient-find_by_ids}{}}}
\subsection{Method \code{find_by_ids()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpecimenClient$find_by_ids(ids = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpecimenClient-find_by_unit_id"></a>}}
\if{latex}{\out{\hypertarget{method-SpecimenClient-find_by_unit_id}{}}}
\subsection{Method \code{find_by_unit_id()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpecimenClient$find_by_unit_id(unitID = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpecimenClient-get_distinct_values"></a>}}
\if{latex}{\out{\hypertarget{method-SpecimenClient-get_distinct_values}{}}}
\subsection{Method \code{get_distinct_values()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpecimenClient$get_distinct_values(
  field = NULL,
  querySpec = NULL,
  queryParams = list(),
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpecimenClient-get_distinct_values_per_group"></a>}}
\if{latex}{\out{\hypertarget{method-SpecimenClient-get_distinct_values_per_group}{}}}
\subsection{Method \code{get_distinct_values_per_group()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpecimenClient$get_distinct_values_per_group(group = NULL, field = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpecimenClient-get_field_info"></a>}}
\if{latex}{\out{\hypertarget{method-SpecimenClient-get_field_info}{}}}
\subsection{Method \code{get_field_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpecimenClient$get_field_info(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpecimenClient-get_ids_in_collection"></a>}}
\if{latex}{\out{\hypertarget{method-SpecimenClient-get_ids_in_collection}{}}}
\subsection{Method \code{get_ids_in_collection()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpecimenClient$get_ids_in_collection(name = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpecimenClient-get_named_collections"></a>}}
\if{latex}{\out{\hypertarget{method-SpecimenClient-get_named_collections}{}}}
\subsection{Method \code{get_named_collections()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpecimenClient$get_named_collections(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpecimenClient-get_paths"></a>}}
\if{latex}{\out{\hypertarget{method-SpecimenClient-get_paths}{}}}
\subsection{Method \code{get_paths()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpecimenClient$get_paths(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpecimenClient-get_setting"></a>}}
\if{latex}{\out{\hypertarget{method-SpecimenClient-get_setting}{}}}
\subsection{Method \code{get_setting()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpecimenClient$get_setting(name = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpecimenClient-get_settings"></a>}}
\if{latex}{\out{\hypertarget{method-SpecimenClient-get_settings}{}}}
\subsection{Method \code{get_settings()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpecimenClient$get_settings(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpecimenClient-group_by_scientific_name"></a>}}
\if{latex}{\out{\hypertarget{method-SpecimenClient-group_by_scientific_name}{}}}
\subsection{Method \code{group_by_scientific_name()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpecimenClient$group_by_scientific_name(
  querySpec = NULL,
  queryParams = list(),
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpecimenClient-is_operator_allowed"></a>}}
\if{latex}{\out{\hypertarget{method-SpecimenClient-is_operator_allowed}{}}}
\subsection{Method \code{is_operator_allowed()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpecimenClient$is_operator_allowed(field = NULL, operator = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpecimenClient-query"></a>}}
\if{latex}{\out{\hypertarget{method-SpecimenClient-query}{}}}
\subsection{Method \code{query()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpecimenClient$query(querySpec = NULL, queryParams = list(), ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpecimenClient-print"></a>}}
\if{latex}{\out{\hypertarget{method-SpecimenClient-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpecimenClient$print(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpecimenClient-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SpecimenClient-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpecimenClient$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
