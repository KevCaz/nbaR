% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/QueryCondition.r
\docType{data}
\name{QueryCondition}
\alias{QueryCondition}
\title{QueryCondition Class}
\format{}
\usage{

}
\description{
Class modeling a query condition. A condition consists of a field name, a ComparisonOperator and a value. For example: &#39;name&#39;, EQUALS, &#39;John&#39;. A condition can optionally have a list of sibling conditions. These are joined to the containing condition using the AND or OR operator. A condition and its siblings are strongly bound together, as though surrounded by parentheses: (condition AND sibling0 AND sibling1). Because each sibling may itself also have a list of sibling conditions, this allows you to nest logical expressions like (A AND (B OR C OR (D AND E)) AND F).
}
\section{Fields}{

\describe{
\item{\code{not}}{character}

\item{\code{field}}{character}

\item{\code{operator}}{character}

\item{\code{value}}{list}

\item{\code{and}}{list(QueryCondition)}

\item{\code{or}}{list(QueryCondition)}

\item{\code{constantScore}}{logical}

\item{\code{boost}}{numeric}
}}

\section{Methods}{

\describe{

\item{\code{$new()}}{

  Constructor QueryCondition object.

}
\item{\code{$fromList(QueryConditionList)}}{

  Create QueryCondition object from list.

}

\item{\code{$toList()}}{

  Get list representation of QueryCondition.

}
\item{\code{fromJSONString(QueryConditionJson)}}{

  Create QueryCondition object from JSON.

}
\item{\code{toJSONString(pretty=TRUE)}}{

  Get JSON representation of QueryCondition.

}
}
}

\keyword{datasets}
