% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GeoClient.r
\docType{data}
\name{GeoClient}
\alias{GeoClient}
\title{Geo operations}
\format{An object of class \code{R6ClassGenerator} of length 24.}
\usage{
GeoClient
}
\description{
Client class for nbaR.Geo objects
}
\section{Fields}{

\describe{
\item{\code{basePath}}{Stores url path of the request.}

\item{\code{userAgent}}{Set the user agent of the request.}
}}

\section{Methods}{

\describe{
\item{\code{ count }}{

  Get the number of geo areas matching a given condition;
  Conditions given as query string.

    Parameters:
    \itemize{
        \item \code{ query_spec } : Object of type QuerySpec or its JSON representation

        \item \code{ ... } : additional parameters passed to httr::GET
    }
    Returns:
        \code{ integer }
}
\item{\code{ count_distinct_values }}{

  Count the distinct number of values that exist for a given field;
  .

    Parameters:
    \itemize{

        \item \code{ field } : name of field in taxon object
        \item \code{ ... } : additional parameters passed to httr::GET
    }
    Returns:
        \code{ list }
}
\item{\code{ count_distinct_values_per_group }}{

  Count the distinct number of field values that exist per the given field to group by;
  .

    Parameters:
    \itemize{

        \item \code{ group } : name of field in the geo area object to group by \item \code{ field } : name of field in the geo area object
        \item \code{ ... } : additional parameters passed to httr::GET
    }
    Returns:
        \code{ list }
}
\item{\code{ find }}{

  Find a GEO area by id;
  Returns a GEO object containing a GEO json polygon.

    Parameters:
    \itemize{

        \item \code{ id } : id of geo area
        \item \code{ ... } : additional parameters passed to httr::GET
    }
    Returns:
        \code{ GeoArea }
}
\item{\code{ find_by_ids }}{

  Find geo areas by ids;
  Given multiple ids, returns a list of geo area objects.

    Parameters:
    \itemize{

        \item \code{ ids } : ids of multiple geo areas, separated by comma
        \item \code{ ... } : additional parameters passed to httr::GET
    }
    Returns:
        \code{ GeoArea }
}
\item{\code{ get_distinct_values }}{

  Get all different values that exist for a field;
  A list of all fields for geo area documents can be retrieved with /metadata/getFieldInfo.

    Parameters:
    \itemize{

        \item \code{ field } : name of field in geo area object
        \item \code{ ... } : additional parameters passed to httr::GET
    }
    Returns:
        \code{ list }
}
\item{\code{ get_distinct_values_per_group }}{

  Get all distinct values (and their document count) for the field given divided per distinct value of the field to group by;
  .

    Parameters:
    \itemize{

        \item \code{ group } : name of field in the geo area object to group by \item \code{ field } : name of field in the geo area object
        \item \code{ ... } : additional parameters passed to httr::GET
    }
    Returns:
        \code{ list }
}
\item{\code{ get_field_info }}{

  Returns extended information for each field of a specimen document;
  Info consists of whether the fields is indexed, the ElasticSearch datatype and a list of allowed operators.

    Parameters:
    \itemize{


        \item \code{ ... } : additional parameters passed to httr::GET
    }
    Returns:
        \code{ list }
}
\item{\code{ get_geo_json_for_locality }}{

  Retrieve a GeoJson object for a given locality;
  Returns a GeoJson polygon.

    Parameters:
    \itemize{

        \item \code{ locality } :
        \item \code{ ... } : additional parameters passed to httr::GET
    }
    Returns:
        \code{ list }
}
\item{\code{ get_paths }}{

  Returns the full path of all fields within a document;
  See also metadata/getFieldInfo for all allowed operators per field.

    Parameters:
    \itemize{


        \item \code{ ... } : additional parameters passed to httr::GET
    }
    Returns:
        \code{ character }
}
\item{\code{ get_setting }}{

  Get the value of an NBA setting;
  All settings can be queried with /metadata/getSettings.

    Parameters:
    \itemize{

        \item \code{ name } : name of setting
        \item \code{ ... } : additional parameters passed to httr::GET
    }
    Returns:
        \code{ list }
}
\item{\code{ get_settings }}{

  List all publicly available configuration settings for the NBA;
  The value of a specific setting can be queried with metadata/getSetting/{name}.

    Parameters:
    \itemize{


        \item \code{ ... } : additional parameters passed to httr::GET
    }
    Returns:
        \code{ list }
}
\item{\code{ is_operator_allowed }}{

  Checks if a given operator is allowed for a given field;
  See also metadata/getFieldInfo.

    Parameters:
    \itemize{

        \item \code{ field } : Field in geo area document \item \code{ operator } : operator
        \item \code{ ... } : additional parameters passed to httr::GET
    }
    Returns:
        \code{ list }
}
\item{\code{ query }}{

  Query for geo areas;
  Query on searchable fields to retrieve matching geo areas.

    Parameters:
    \itemize{
        \item \code{ query_spec } : Object of type QuerySpec or its JSON representation

        \item \code{ ... } : additional parameters passed to httr::GET
    }
    Returns:
        \code{ QueryResult }
}
}
}

\keyword{datasets}
